package com.caglar.finalprojectaws.Views;

import com.caglar.finalprojectaws.Controllers.Student;
import com.caglar.finalprojectaws.Controllers.Controllers;
import static com.caglar.finalprojectaws.ValidationAndMethod.ValidationAndCalculation.*;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TeacherClassGroupFrame extends javax.swing.JFrame {

    private Connection con;
    private PreparedStatement prest;
    private Statement st;
    Controllers connect = new Controllers();

    String courseID;
    String subjectID;
    String classCode;

    int counterCourseCB = 0;
    int counterClassCB = 0;
    int counterSubjectCB = 0;

//    Course c1 = new Course();
//    Subject sub1 = new Subject();
    Student s1 = new Student();

//    String sql = "Select * FROM course";
//
//    String sql3 = "SELECT * FROM subject\n"
//            + "INNER JOIN course ON subject.course_id = course.course_id\n"
//            + "WHERE subject.course_id =  ? ";
//
//    String sql4 = "SELECT student.student_id,student.first_name, student.sur_name,\n"
//            + "grade.first_grade, grade.second_grade, grade.third_grade, grade.final_exam,\n"
//            + "grade.over_all FROM student INNER JOIN grade ON student.student_id = grade.student_id\n"
//            + "WHERE grade.subject_id = ? ";
//    String sql5 = "SELECT student.student_id,student.first_name, student.sur_name,\n"
//            + "grade.first_grade, grade.second_grade, grade.third_grade, grade.final_exam,\n"
//            + "grade.over_all FROM student INNER JOIN grade ON student.student_id = grade.student_id\n"
//            + "WHERE grade.subject_id = ? ";

    public TeacherClassGroupFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        classGroupPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JScrollPane();
        classGroupOutputTable = new javax.swing.JTable();
        gradePanel = new javax.swing.JPanel();
        deleteBTN = new javax.swing.JButton();
        studenInfoBTN = new javax.swing.JButton();
        updateGradeBTN = new javax.swing.JButton();
        courseCB = new javax.swing.JComboBox<>();
        courseDetailsLabel = new javax.swing.JLabel();
        classDetailsLabel = new javax.swing.JLabel();
        classCB = new javax.swing.JComboBox<>();
        subjectDetailsLabel = new javax.swing.JLabel();
        subjectCB = new javax.swing.JComboBox<>();
        searchBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teacher Class Group Frame");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        classGroupPanel.setBackground(new java.awt.Color(239, 240, 234));

        classGroupOutputTable.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        classGroupOutputTable.setForeground(new java.awt.Color(0, 153, 153));
        classGroupOutputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Class Code", "Subject", "Student ID", "Student Fullname", "First Grade", "Second Grade", "Third Grade", "Final Grade", "Over All"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        classGroupOutputTable.setRowHeight(30);
        classGroupOutputTable.setRowMargin(1);
        classGroupOutputTable.setSelectionBackground(new java.awt.Color(0, 204, 204));
        classGroupOutputTable.setSelectionForeground(new java.awt.Color(102, 102, 102));
        classGroupOutputTable.setShowGrid(true);
        tablePanel.setViewportView(classGroupOutputTable);

        gradePanel.setBackground(new java.awt.Color(239, 240, 234));
        gradePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grades", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        deleteBTN.setBackground(new java.awt.Color(0, 153, 153));
        deleteBTN.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        deleteBTN.setForeground(new java.awt.Color(255, 255, 255));
        deleteBTN.setText("Delete Grade");
        deleteBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteBTNMouseExited(evt);
            }
        });
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        studenInfoBTN.setBackground(new java.awt.Color(0, 153, 153));
        studenInfoBTN.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        studenInfoBTN.setForeground(new java.awt.Color(255, 255, 255));
        studenInfoBTN.setText("Student Info");
        studenInfoBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studenInfoBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                studenInfoBTNMouseExited(evt);
            }
        });
        studenInfoBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studenInfoBTNActionPerformed(evt);
            }
        });

        updateGradeBTN.setBackground(new java.awt.Color(0, 153, 153));
        updateGradeBTN.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        updateGradeBTN.setForeground(new java.awt.Color(255, 255, 255));
        updateGradeBTN.setText("Add / Update Grade");
        updateGradeBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateGradeBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateGradeBTNMouseExited(evt);
            }
        });
        updateGradeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGradeBTNActionPerformed(evt);
            }
        });

        courseCB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        courseCB.setPreferredSize(new java.awt.Dimension(350, 30));
        courseCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                courseCBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                courseCBMouseExited(evt);
            }
        });
        courseCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseCBActionPerformed(evt);
            }
        });

        courseDetailsLabel.setText("Course Details");

        classDetailsLabel.setText("Class Details");

        classCB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        classCB.setPreferredSize(new java.awt.Dimension(200, 30));
        classCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classCBItemStateChanged(evt);
            }
        });
        classCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                classCBFocusLost(evt);
            }
        });
        classCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                classCBMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                classCBMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                classCBMouseReleased(evt);
            }
        });
        classCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classCBActionPerformed(evt);
            }
        });
        classCB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                classCBPropertyChange(evt);
            }
        });

        subjectDetailsLabel.setText("Subject Details");

        subjectCB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        subjectCB.setPreferredSize(new java.awt.Dimension(200, 30));
        subjectCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectCBActionPerformed(evt);
            }
        });

        searchBTN.setBackground(new java.awt.Color(0, 153, 153));
        searchBTN.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        searchBTN.setForeground(new java.awt.Color(255, 255, 255));
        searchBTN.setText("Search");
        searchBTN.setPreferredSize(new java.awt.Dimension(100, 30));
        searchBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchBTNMouseExited(evt);
            }
        });
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gradePanelLayout = new javax.swing.GroupLayout(gradePanel);
        gradePanel.setLayout(gradePanelLayout);
        gradePanelLayout.setHorizontalGroup(
            gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradePanelLayout.createSequentialGroup()
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradePanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(studenInfoBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateGradeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gradePanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseCB, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseDetailsLabel))
                        .addGap(35, 35, 35)
                        .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classDetailsLabel))
                        .addGap(35, 35, 35)
                        .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectDetailsLabel)
                            .addGroup(gradePanelLayout.createSequentialGroup()
                                .addComponent(subjectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gradePanelLayout.setVerticalGroup(
            gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDetailsLabel)
                    .addComponent(classDetailsLabel)
                    .addComponent(subjectDetailsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studenInfoBTN)
                    .addComponent(updateGradeBTN)
                    .addComponent(deleteBTN))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout classGroupPanelLayout = new javax.swing.GroupLayout(classGroupPanel);
        classGroupPanel.setLayout(classGroupPanelLayout);
        classGroupPanelLayout.setHorizontalGroup(
            classGroupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classGroupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 998, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(gradePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        classGroupPanelLayout.setVerticalGroup(
            classGroupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classGroupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gradePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(classGroupPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(classGroupPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        connect.selectCourses(courseCB);
    }//GEN-LAST:event_formWindowOpened

    private void courseCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseCBActionPerformed
        counterCourseCB++;
        System.out.println("Course counter: " + counterCourseCB);
        courseID = courseCB.getSelectedItem().toString().split(" ", 2)[0];

        System.out.println(courseID);
        classCB.removeAllItems();
        subjectCB.removeAllItems();

        //Fetch the Class Groups
        connect.selectClassGroup(classCB, courseID);
        //Fetch the Subjects by course id
        connect.selectSubjectByCourse(subjectCB, courseID);
    }//GEN-LAST:event_courseCBActionPerformed

    private void classCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classCBActionPerformed
        counterClassCB++;
        System.out.println("Class counter: " + counterClassCB);
    }//GEN-LAST:event_classCBActionPerformed

    private void deleteBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBTNMouseEntered
        deleteBTN.setBackground(new Color(0, 204, 204));
        deleteBTN.setForeground(new Color(102, 102, 102));
    }//GEN-LAST:event_deleteBTNMouseEntered

    private void deleteBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBTNMouseExited
        deleteBTN.setBackground(new Color(0, 153, 153));
        deleteBTN.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_deleteBTNMouseExited

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        int selectedRow = classGroupOutputTable.getSelectedRow();
        if (selectedRow != -1) {
            
            String studentId = classGroupOutputTable.getValueAt(selectedRow, 3).toString();
            String subjectId = classGroupOutputTable.getValueAt(selectedRow, 2).toString().split(" ", 2)[0];
            String subjectFull = classGroupOutputTable.getValueAt(selectedRow, 2).toString();
            String studentFullName = classGroupOutputTable.getValueAt(selectedRow, 4).toString();
            Double firstGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 5);
            Double secondGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 6);
            Double thirdGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 7);
            Double finalExam = (Double) classGroupOutputTable.getValueAt(selectedRow, 8);

            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete "
                    + studentId + " " + studentFullName + " from " + subjectFull);

            if (confirm == 0) {

                System.out.println("confirming delete");

                // setting all grades to null
                connect.delete(studentId, subjectId, firstGrade, secondGrade, thirdGrade, finalExam);
            }
        }
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void studenInfoBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studenInfoBTNMouseEntered
        studenInfoBTN.setBackground(new Color(0, 204, 204));
        studenInfoBTN.setForeground(new Color(102, 102, 102));
    }//GEN-LAST:event_studenInfoBTNMouseEntered

    private void studenInfoBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studenInfoBTNMouseExited
        studenInfoBTN.setBackground(new Color(0, 153, 153));
        studenInfoBTN.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_studenInfoBTNMouseExited

    private void studenInfoBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studenInfoBTNActionPerformed
        int selectedRow = classGroupOutputTable.getSelectedRow();
        if (selectedRow != -1) { // Check if a row is actually selected
            String studentId = classGroupOutputTable.getValueAt(selectedRow, 3).toString();
            s1.setStudent_id(studentId + "");
            StudentInfoFrame sif = new StudentInfoFrame(s1);
            sif.setVisible(true);
        } else {
            DisplayMessage("Select Student From List");
        }
    }//GEN-LAST:event_studenInfoBTNActionPerformed

    private void classCBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_classCBPropertyChange

    }//GEN-LAST:event_classCBPropertyChange

    private void classCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classCBItemStateChanged

    }//GEN-LAST:event_classCBItemStateChanged

    private void classCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classCBFocusLost

    }//GEN-LAST:event_classCBFocusLost

    private void classCBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classCBMousePressed

    }//GEN-LAST:event_classCBMousePressed

    private void classCBMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classCBMouseReleased

    }//GEN-LAST:event_classCBMouseReleased

    private void classCBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classCBMouseExited

    }//GEN-LAST:event_classCBMouseExited

    private void subjectCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectCBActionPerformed
        counterSubjectCB++;
        System.out.println("Subject counter: " + counterSubjectCB);
    }//GEN-LAST:event_subjectCBActionPerformed

    private void updateGradeBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateGradeBTNMouseEntered
        updateGradeBTN.setBackground(new Color(0, 204, 204));
        updateGradeBTN.setForeground(new Color(102, 102, 102));
    }//GEN-LAST:event_updateGradeBTNMouseEntered

    private void updateGradeBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateGradeBTNMouseExited
        updateGradeBTN.setBackground(new Color(0, 153, 153));
        updateGradeBTN.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_updateGradeBTNMouseExited

    private void updateGradeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGradeBTNActionPerformed
        int selectedRow = classGroupOutputTable.getSelectedRow();
        if (selectedRow != -1) { // Check if a row is actually selected
            String studentId = classGroupOutputTable.getValueAt(selectedRow, 3).toString();
            String subjectId = classGroupOutputTable.getValueAt(selectedRow, 2).toString().split(" ", 2)[0];
            String studentFullName = classGroupOutputTable.getValueAt(selectedRow, 4).toString();
            Double firstGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 5);
            Double secondGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 6);
            Double thirdGrade = (Double) classGroupOutputTable.getValueAt(selectedRow, 7);
            Double finalExam = (Double) classGroupOutputTable.getValueAt(selectedRow, 8);

            System.out.println("Student ID " + studentId);
            System.out.println("Subjectt ID " + subjectId);

            JOptionPane.showMessageDialog(null, "Student ID: " + studentId
                    + "\nStudent Fullname: " + studentFullName
                    + "\nSubject ID: " + subjectId);

            connect.addUpdate(studentId, subjectId, firstGrade, secondGrade, thirdGrade, finalExam);
        } else {
            JOptionPane.showMessageDialog(null, "⚠️ No row selected!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_updateGradeBTNActionPerformed

    private void courseCBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseCBMouseEntered

    }//GEN-LAST:event_courseCBMouseEntered

    private void courseCBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseCBMouseExited

    }//GEN-LAST:event_courseCBMouseExited

    private void searchBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBTNMouseEntered
        searchBTN.setBackground(new Color(0, 204, 204));
        searchBTN.setForeground(new Color(102, 102, 102));
    }//GEN-LAST:event_searchBTNMouseEntered

    private void searchBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBTNMouseExited
        searchBTN.setBackground(new Color(0, 153, 153));
        searchBTN.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_searchBTNMouseExited

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        classCode = classCB.getSelectedItem().toString();
        String subjectFull = subjectCB.getSelectedItem().toString();
        subjectID = subjectCB.getSelectedItem().toString().split(" ", 2)[0];

        System.out.println("class code " + classCode);
        System.out.println("subject ID " + subjectID);

        DefaultTableModel tableModel1 = (DefaultTableModel) classGroupOutputTable.getModel();
        tableModel1.getDataVector().removeAllElements();

        connect.mainTableSearch(classCode, subjectID, subjectFull, tableModel1);
    }//GEN-LAST:event_searchBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherClassGroupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherClassGroupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherClassGroupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherClassGroupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherClassGroupFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> classCB;
    private javax.swing.JLabel classDetailsLabel;
    private javax.swing.JTable classGroupOutputTable;
    private javax.swing.JPanel classGroupPanel;
    private javax.swing.JComboBox<String> courseCB;
    private javax.swing.JLabel courseDetailsLabel;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JPanel gradePanel;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton studenInfoBTN;
    private javax.swing.JComboBox<String> subjectCB;
    private javax.swing.JLabel subjectDetailsLabel;
    private javax.swing.JScrollPane tablePanel;
    private javax.swing.JButton updateGradeBTN;
    // End of variables declaration//GEN-END:variables
}
